{"version":3,"sources":["views/RegisterView.js","views/LoginView.js","redux/contacts/contacts-reducer.js","redux/auth/authReducer.js","redux/store.js","components/privateRoute/PrivateRoute.js","components/publicRoute/PublicRoute.js","routes.js","components/navigation/Navigation.js","components/userMenu/UserMenu.js","components/appBar/AppBar.js","components/layout/Layout.js","App.js","index.js","components/contactListItem/contactListItem.js","components/contactsList/contactsList.js","components/Notification/Notification.js","components/form/Form.js","components/filter/Filter.js","components/appTitle/AppTitle.js","views/ContactView.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","redux/auth/authSelectors.js","redux/auth/authOperations.js","components/contactsList/contacts-list.module.css","redux/contacts/contacts-operations.js","global.module.css","redux/auth/authActions.js"],"names":["RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","onSubmit","type","placeholder","onChange","Component","connect","authOperations","register","LoginView","currentTarget","onLogin","logIn","items","createReducer","contactActions","addContactSucess","action","payload","deleteContactsSucess","filter","contact","id","contactsActions","fetchContactsSucess","loading","addContactRequest","addContactError","deleteContactsRequest","deleteContactsError","getFilter","_","combineReducers","initialState","user","authActions","registerSuccess","loginSuccess","getCurrentUserSuccess","logoutSuccess","token","error","registerError","loginError","logoutError","getCurrentUserError","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","auth","persistReducer","authReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","isAuthenticated","authSelectors","component","routeProps","render","to","restricted","path","label","exact","lazy","private","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","routes","map","route","style","activeStyle","container","alignItems","avatar","marginRight","getUserName","onLogout","logOut","src","alt","width","onClick","header","justifyContent","borderBottom","marginLeft","Layout","children","App","onGetCurrentUser","className","wrapper","fallback","mapDispatchToProps","currentUser","isLoading","contactsSelectors","ReactDOM","document","getElementById","ownProps","item","getContactById","console","log","dispatch","deleteContact","contactsOperations","number","contactList__item","tel","Button","btn","variant","contactList","getFilteredContacts","TransitionGroup","contact__list","CSSTransition","timeout","unmountOnExit","classNames","Notification","Form","notification","getContact","find","el","setTimeout","uuidv4","onAddContact","TextField","required","in","addContact","mapDispatctToProps","getFilterName","AppTitle","appear","ContactView","onFetchContacts","fetchContacts","getItems","createAction","fetchContactsRequest","fetchContactsError","toLowerCase","includes","contactId","axios","defaults","baseURL","setToken","headers","common","Authorization","credentials","registerRequest","post","then","response","data","catch","loginRequest","message","logoutRequest","getState","persistedToken","getCurrentUserRequest","get","res","module","exports","delete"],"mappings":"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","file":"static/js/main.cc0bec75.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport authOperations from \"../redux/auth/authOperations\"\n\n\nclass RegisterView extends Component {\n    state = {\n        name: \" \",\n        email: \" \",\n        password: \"\",\n}\n    handleChange = ({ target: { name, value } }) => {\n    this.setState({[name]:value})\n}\n    handleSubmit = e => {\n        e.preventDefault();\n\n        this.props.onRegister({ ...this.state })\n    };\n\n    render() {\n        const { name, email, password } = this.state;\n\n        return (\n          <div>\n            <h1>Register Page</h1>\n            <form onSubmit={this.handleSubmit}>\n              <label>\n                Name{\" \"}\n                <input\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"name\"\n                  value={name}\n                  onChange={this.handleChange}\n                />\n              </label>\n              <label>\n                Email{\" \"}\n                <input\n                  value={email}\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"email\"\n                  onChange={this.handleChange}\n                />\n              </label>\n              <label>\n                Password{\" \"}\n                <input\n                  name=\"password\"\n             value={password}\n                  type=\"password\"\n                  placeholder=\"password\"\n                  onChange={this.handleChange}\n                />\n              </label>\n              <button type=\"submit\"> Sign up </button>\n            </form>\n          </div>\n        );\n    }\n\n}\n\nexport default connect(null, {onRegister: authOperations.register})(RegisterView)","import React, { Component } from 'react'\nimport {connect} from \"react-redux\"\nimport authOperations from '../redux/auth/authOperations';\n\n\nclass LoginView extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n this.setState({ [name]: value });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onLogin({ ...this.state });\n     this.setState({ email: \"\", password: \"\" });\n  };\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <div>\n        <h2>Login Page</h2>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Email{\"\"}\n            <input\n              onChange={this.handleChange}\n              name=\"email\"\n              value={email}\n              type=\"email\"\n              placeholder=\"email\"\n            />\n          </label>\n          <label>\n            Password{\"\"}\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n     \n            />\n          </label>\n          <button type=\"submit\"> Sign up </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect(null,{onLogin: authOperations.logIn})(LoginView)","import { combineReducers } from 'redux';\nimport contactActions from './contacts-actions';\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactsActions from './contacts-actions';\nconst addContacts = (state, action) => [...state, action.payload];\nconst onDeleteContacts = (state, action) =>\n  state.filter(contact => contact.id !== action.payload);\n\nconst items = createReducer([], {\n  [contactActions.addContactSucess]: addContacts,\n  [contactActions.deleteContactsSucess]: onDeleteContacts,\n  [contactsActions.fetchContactsSucess]: (state, action) => action.payload,\n});\nconst loading = createReducer(false, {\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSucess]: () => false,\n  [contactsActions.addContactError]: () => false,\n  [contactsActions.deleteContactsRequest]: () => true,\n  [contactsActions.deleteContactsSucess]: () => false,\n  [contactsActions.deleteContactsError]: () => false,\n});\nconst filter = createReducer('', {\n  [contactActions.getFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\"\nimport authActions from \"./authActions\"\n\n\nconst initialState = {\n    name: null,\n    email: null,\n\n}\n\nconst user = createReducer(initialState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n  [authActions.logoutSuccess]: () => initialState,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: (_, { payload }) => null,\n});\n \n\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.loginError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\n  [authActions.logoutSuccess]: () => null,\n    [authActions.getCurrentUserSuccess]: () => null,\n  \n});\n\n\nexport default combineReducers({\n    \n    user,\n    token,\n    error,\n})","import { combineReducers } from 'redux';\n\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\nimport authReducer from \"./auth/authReducer\";\nimport storage from 'redux-persist/lib/storage';\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\n\n\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token']\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  devTools: process.env.NODE_ENV === \"development\",\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n\nexport const persistor = persistStore(store);\nexport default store;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport authSelectors from \"../../redux/auth/authSelectors\";\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"./login\" />\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport authSelectors from \"../../redux/auth/authSelectors\";\n\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to=\"/contacts\"/>\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);","import { lazy } from \"react\";\n\nexport default [\n  {\n    path: \"/\",\n    label: \"Home\",\n    exact: true,\n    component: lazy(() => import(\"./views/HomeView\")),\n    private: false,\n    restricted: false,\n  },\n  {\n    path: \"/register\",\n    label: \"Register\",\n    exact: true,\n    component: lazy(() => import(\"./views/RegisterView\")),\n    private: false,\n    restricted: true,\n  },\n  {\n    path: \"/login\",\n    label: \"Login\",\n    exact: true,\n    component: lazy(() => import(\"./views/LoginView\")),\n    private: false,\n    restricted: true,\n  },\n  {\n    path: \"/contacts\",\n    label: \"Contacts\",\n    exact: true,\n    component: lazy(() => import(\"./views/ContactView\")),\n    private: true,\n    restricted: false,\n  },\n];\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport routes from \"../../routes\";\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\",\n  },\n  activeLink: {\n    color: \"#E84A5F\",\n  },\n};\n\nconst Navigation = () => (\n  <nav>\n    {routes.map((route) => (\n      <NavLink\n        exact={route.exact}\n        key={route.label}\n        to={route.path}\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        {route.label}\n      </NavLink>\n    ))}\n  </nav>\n);\n\nexport default Navigation;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport authSelectors from \"../../redux/auth/authSelectors\";\nimport authOperations from \"../../redux/auth/authOperations\"\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div style={styles.container}>\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n    <span style={styles.name}>Welcome, {name}</span>\n    <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  name: authSelectors.getUserName(state),\n});\n\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\n  UserMenu\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Navigation from \"../navigation/Navigation\";\nimport UserMenu from \"../userMenu/UserMenu\";\nimport authSelectors from \"../../redux/auth/authSelectors\";\n\nconst styles = {\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid #2A363B\",\n  },\n};\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header style={styles.header}>\n    <Navigation />\n    {isAuthenticated && <UserMenu />}\n  </header>\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from \"react\";\nimport AppBar from \"../appBar/AppBar\";\n\nconst styles = {\n  container: {\n    width: \"80vw\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    padding: \"0 24px\",\n  },\n};\n\nconst Layout = ({ children }) => (\n  <div style={styles.container}>\n    <AppBar />\n    {children}\n  </div>\n);\n\nexport default Layout;\n","import React, { Component ,Suspense} from 'react';\nimport { connect } from 'react-redux';\n\nimport { BrowserRouter, Switch, Redirect} from \"react-router-dom\";\nimport PrivateRoute from \"./components/privateRoute/PrivateRoute\"\nimport styles from './global.module.css';\nimport PublicRoute from \"./components/publicRoute/PublicRoute\"\n\nimport ContactView from './views/ContactView'\nimport contactsOperations from '../src/redux/contacts/contacts-operations';\nimport contactsSelectors from './redux/contacts/contacts-selectors';\nimport RegisterView from \"./views/RegisterView\";\nimport LoginView from \"./views/LoginView\";\nimport routes from \"./routes\"\nimport authOperations from \"./redux/auth/authOperations\"\nimport Layout from './components/layout/Layout';\n\nclass App extends Component {\n  componentDidMount() {\n\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <div className={styles.wrapper}>\n          <Layout />\n          <Suspense fallback={<h1>Loading...</h1>}>\n            <Switch>\n              {routes.map((route) =>\n                route.private ? (\n                  <PrivateRoute key={route.label} {...route} />\n                ) : (\n                  <PublicRoute key={route.label} {...route} />\n                )\n              )}\n            </Switch>\n          </Suspense>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: contactsSelectors.loading(state),\n});\nconst mapDispatchToProps = {\n\n  onGetCurrentUser: authOperations.currentUser,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store, { persistor } from \"./redux/store\";\nimport { Provider } from 'react-redux';\n\nimport 'modern-normalize/modern-normalize.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n     <PersistGate loading={null} persistor={persistor}>\n    <App />\n        </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"../contactsList/contacts-list.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\nimport contactsSelectors from \"../../redux/contacts/contacts-selectors\";\n\nfunction ContactListItem({ id, name, number, deleteContact }) {\n  return (\n    <li className={styles.contactList__item}>\n      <div className={styles.contacts}>\n        <span className={styles.name}>{name}</span>\n        <span className={styles.tel}>: {number}</span>\n      </div>\n      <Button\n        className={styles.btn}\n        variant=\"contained\"\n        color=\"secondary\"\n        type=\"button\"\n        id={id}\n        onClick={deleteContact}\n      >\n        delete Contact\n      </Button>\n    </li>\n  );\n}\nconst mapStateToProps = (state, ownProps) => {\n  const item = contactsSelectors.getContactById(state, ownProps.id);\nconsole.log(item)\n  return {\n    ...item,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  deleteContact: () => dispatch(contactsOperations.deleteContact(ownProps.id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./contacts-list.module.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport contactsSelectors from \"../../redux/contacts/contacts-selectors\";\nimport ContactListItem from \"../contactListItem/contactListItem\";\nfunction ContactList({ contactList }) {\n  return (\n    <TransitionGroup component=\"ul\" className={styles.contact__list}>\n      {contactList.map(({ id }) => {\n        return (\n          <CSSTransition\n            key={id}\n            timeout={250}\n            unmountOnExit\n            classNames={styles}\n          >\n            <ContactListItem key={id} id={id} />\n          </CSSTransition>\n        );\n      })}\n    </TransitionGroup>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  contactList: contactsSelectors.getFilteredContacts(state),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './notification.css';\n\nexport default Notification = () => {\n  return (\n    <CSSTransition>\n      <p className=\"notification\">This contact is already exists</p>\n    </CSSTransition>\n  );\n};\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { connect } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\nimport Notification from \"../Notification/Notification\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"../Notification/notification.css\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n    notification: false,\n  };\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  getContact = (e) => {\n    e.preventDefault();\n    if (\n      this.props.state.contacts.items.find((el) => el.name === this.state.name)\n    ) {\n      this.setState({ notification: true, name: \"\", number: \"\" });\n      setTimeout(() => this.setState({notification:false}), 1500)\n    } else {\n      const contact = {\n        name: this.state.name,\n        number: this.state.number,\n        id: uuidv4,\n      };\n      this.props.onAddContact(contact);\n      this.setState({ name: \"\", number: \"\" });\n    }\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <form onSubmit={this.getContact}>\n          <h2>Name</h2>\n\n          <label>\n            Name:\n            <TextField\n              id=\"outlined-basic\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <label>\n            Phone number:\n            <TextField\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Add Contact\n          </Button>\n        </form>\n        <CSSTransition\n          in={this.state.notification}\n          unmountOnExit\n          timeout={2000}\n          classNames=\"notification\"\n          // onEntered={() => this.setState({ notification: false })}\n        >\n          <Notification />\n        </CSSTransition>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return { state };\n};\n\nconst mapDispatchToProps = {\n  onAddContact: contactsOperations.addContact,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import React from \"react\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport contactsSelectors from \"../../redux/contacts/contacts-selectors\";\n\nconst Filter = ({ filter, getFilterName }) => {\n  return (\n    <>\n      <h2>Contacts</h2>\n      <TextField\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        onChange={(e) => getFilterName(e.target.value)}\n      />\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  filter: contactsSelectors.getFilter(state),\n});\nconst mapDispatctToProps = {\n  getFilterName: contactsActions.getFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatctToProps)(Filter);","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport './appTitle.css';\n\nconst AppTitle = () => {\n  return (\n    <CSSTransition\n      appear={true}\n      in={true}\n      timeout={500}\n      unmountOnExit\n      classNames=\"AppTitle\"\n    >\n      <h1 className=\"title\">PhoneBook</h1>\n    </CSSTransition>\n  );\n};\nexport default AppTitle;\n","import React, { Component } from 'react'\nimport ContactsList from \"../components/contactsList/contactsList\"\nimport Form from \"../components/form/Form\"\nimport Filter from \"../components/filter/Filter\"\nimport contactsOperations from \"../redux/contacts/contacts-operations\"\nimport AppTitle from \"../components/appTitle/AppTitle\"\nimport { connect } from \"react-redux\"\nimport contactsSelectors from \"../redux/contacts/contacts-selectors\";\nimport authSelectors from \"../redux/auth/authSelectors\"\nimport authOperations from '../redux/auth/authOperations'\n\n\n\nclass ContactView extends Component {\n  componentDidMount() {\n    this.props.onFetchContacts();\n \n  }\n  render() {\n    return (\n      <div >\n        <AppTitle />\n        {this.props.isLoading && <h1>Still Loading...</h1>}\n        <Form />\n\n        <Filter></Filter>\n       \n        <ContactsList/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoading: contactsSelectors.loading(state),\n  items: contactsSelectors.getItems(state),\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\nconst mapDispatchToProps = {\n  onFetchContacts: contactsOperations.fetchContacts,\n\n  \n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactView);","import { createAction } from '@reduxjs/toolkit';\n\nconst addContactRequest = createAction('contacts/addRequest');\nconst addContactSucess = createAction('contacts/addSucess');\nconst addContactError = createAction('contacts/addError');\n\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\nconst fetchContactsSucess = createAction('contacts/fetchSucess');\nconst fetchContactsError = createAction('contacts/fetchError');\n\nconst deleteContactsRequest = createAction('contacts/deleteRequest');\nconst deleteContactsSucess = createAction('contacts/deletSucess');\nconst deleteContactsError = createAction('contacts/deleteError');\n\nconst getFilter = createAction('contacts/filter');\n\nexport default {\n  deleteContactsRequest,\n  deleteContactsSucess,\n  deleteContactsError,\n  getFilter,\n  addContactRequest,\n  addContactSucess,\n  addContactError,\n  fetchContactsSucess,\n  fetchContactsRequest,\n  fetchContactsError,\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getItems = state => state.contacts.items;\nconst loading = state => state.contacts.loading;\nconst getFilter = state => state.contacts.filter;\n\nconst getFilteredContacts = (state) => {\n  const filter = getFilter(state).toLowerCase();\n  const items = getItems(state);\n  console.log(items)\n  return items.filter((item) => item.name.toLowerCase().includes(filter));\n};\n\nconst getContactById = (state, contactId) => {\n  const items = getItems(state);\n  return items.find((item) => item.id === contactId);\n};\n\nexport default {\n  getFilter,\n  getItems,\n getFilteredContacts,\n  loading,\n  getContactById,\n};\n","const isAuthenticated = state => state.auth.token;\n\nconst getUserName = state => state.auth.user.name;\n\nexport default {\n    isAuthenticated,getUserName\n}","import axios from \"axios\";\nimport authActions from \"./authActions\"\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\n\nconst setToken = token => (axios.defaults.headers.common.Authorization = `Bearer ${token}`);\nconst unSetToken = () => (axios.defaults.headers.common.Authorization = \" \");\n\nconst register = credentials => dispatch => {\n    dispatch(authActions.registerRequest())\n\n    axios\n        .post('/users/signUp', credentials)\n        .then(response => {\n            console.log(response.data)\n            setToken(response.data.token)\n            dispatch(authActions.registerSuccess(response.data))\n            setToken(response.data.token)\n        })\n            .catch(error => dispatch(authActions.registerError(error)))\n    \n}\n\nconst logIn = credentials => dispatch => {\n    dispatch(authActions.loginRequest());\n\n    axios\n        .post('/users/login', credentials)\n        .then(response => {\n          console.log(response)\n          setToken(response.data.token);\n            dispatch(authActions.loginSuccess(response.data))\n            \n        })\n    .catch(error => dispatch(authActions.loginError(error.message)))\n}\n\n\n\n\nconst logOut = () => dispatch => {\n    dispatch(authActions.logoutRequest())\n    axios\n    .post('/users/logout')\n        .then(() => {\n           unSetToken()\n            dispatch(authActions.logoutSuccess());\n})\n.catch(error => dispatch(authActions.logoutError(error.message)))\n}\n\n\nconst currentUser = () => (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  setToken(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n  axios\n    .get(\"/users/current\")\n    .then((res) => {\n      dispatch(authActions.getCurrentUserSuccess(res.data));\n    })\n    .catch((error) => dispatch(authActions.getCurrentUserError(error.message)));\n};\n\nexport default {\n    register,logIn,logOut,currentUser\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__list\":\"contacts-list_contact__list__1CVI9\",\"btn\":\"contacts-list_btn__fKySI\",\"contactList__item\":\"contacts-list_contactList__item__3TUPM\",\"name\":\"contacts-list_name__2JGh4\",\"contacts\":\"contacts-list_contacts__PpsPU\",\"enter\":\"contacts-list_enter__swGwa\",\"enterActive\":\"contacts-list_enterActive__24uOt\",\"exit\":\"contacts-list_exit__36oV5\",\"exitActive\":\"contacts-list_exitActive__1rDDh\"};","\nimport axios from \"axios\";\nimport contactsActions from \"./contacts-actions\";\n\n\n\nconst addContact = (data) => (dispatch) => {\n  dispatch(contactsActions.addContactRequest());\n  axios\n    .post(\"/contacts\", { ...data })\n    .then((response) => {\n      dispatch(contactsActions.addContactSucess(response.data));\n    })\n    .catch((error) => dispatch(contactsActions.addContactError(error)));\n};\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(contactsActions.fetchContactsRequest());\n  axios\n    .get(\"/contacts\")\n  \n    .then(({ data }) =>  dispatch(contactsActions.fetchContactsSucess(data)))\n    .catch((error) => dispatch(contactsActions.fetchContactsError(error)));\n};\n\nconst deleteContact = (id) => (dispatch) => {\n  dispatch(contactsActions.deleteContactsRequest());\n  axios\n    .delete(`/contacts/${id}`)\n\n    .then(() => dispatch(contactsActions.deleteContactsSucess(id)))\n    .catch((error) => dispatch(contactsActions.deleteContactsError(error)));\n};\n\nexport default {\n  addContact,\n  fetchContacts,\n  deleteContact,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"global_wrapper__327cc\"};","import { createAction } from \"@reduxjs/toolkit\"\n\n\nconst registerRequest = createAction('auth/registerRequest')\nconst registerSuccess = createAction('auth/registerSuccess')\nconst registerError = createAction(\"auth/registerError\")\n\nconst loginRequest = createAction(\"auth/loginRequest\");\nconst loginSuccess = createAction(\"auth/loginSuccess\");\nconst loginError = createAction(\"auth/loginError\");\n\nconst logoutRequest = createAction(\"auth/logoutRequest\");\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\nconst logoutError = createAction(\"auth/logoutError\");\n\n\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n\nexport default {\n  registerSuccess,\n  registerRequest,\n  registerError,\n  loginSuccess,\n  loginRequest,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};"],"sourceRoot":""}